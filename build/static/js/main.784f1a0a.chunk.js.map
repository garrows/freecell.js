{"version":3,"sources":["features/menu/Menu.module.css","components/App.module.css","components/Card.module.css","components/CardSpace.module.css","components/Overseer.module.css","features/menu/menuSlice.js","features/table/Dealer.js","features/table/Helpers.js","features/table/tableSlice.js","components/Card.js","components/CardSpace.js","components/Overseer.js","features/menu/Menu.js","features/table/Table.js","components/App.js","serviceWorker.js","reducers/index.js","index.js","features/table/Table.module.css"],"names":["module","exports","nextTodoId","menuSlice","createSlice","name","initialState","reducers","illegalMove","reducer","state","action","payload","id","text","alert","push","completed","prepare","toggleTodo","todo","find","actions","MSRand","seed","this","mymax","rand","deck","length","i","j","max_rand","tmp","Dealer","randomizer","_perl_range","start","end","ret","columns","num_cols","map","shuffle","reverse","render_card","card","index","suitInt","rank","Math","floor","suit","charAt","value","key","int","column","row","area","color","selected","col","cardsInCol","forEach","flat","deal_ms_fc_board","sort","a","b","illegalMoveShowing","c","moveSelectedCardToColumn","singleOrColumn","cardsInDestColumn","filter","previousCard","cardsInSelectedColumn","cardsInSourceStack","topCard","legalCardMove","cardsToMove","slice","indexOf","every","underSelectedCard","selectedColumn","moveColumnDialogShowing","checkForAutoMoves","moveSelectedCardToStack","cardsInColumn","moveNextCard","targetCard","holdCard","takenSpots","freeSpot","includes","undefined","cardsInStack","gameOverDialogShowing","randomSeed","round","random","initialSeed","tableSlice","overseerDirection","deal","cardClicked","clickedCard","selectedCard","holdSpaceClicked","stackSpaceClicked","holdSpaceHover","stackSpaceHover","cardHover","columnClicked","cardDoubleClicked","holdCards","closeIllegalMoveDialog","closeGameOverDialog","moveSingleCard","moveColumn","cancelMoveColumnDialog","selectDeck","table","selectIllegalMoveShowing","selectOverseerDirection","selectSeed","selectGameOverDialogShowing","selectMoveColumnDialogShowing","Card","props","onClick","onDoubleClick","onMouseEnter","style","backgroundImage","toLowerCase","className","styles","data-column","data-row","data-area","data-value","data-selected","CardSpace","number","Overseer","direction","gameOver","overseer","src","alt","Component","Menu","newGame","undo","onIllegalMoveClosed","gameOverShowing","onGameOverClosed","onMoveSingleCard","onMoveColumn","onCancelMoveColumn","useState","opened","setOpened","menu","setMenu","aboutDialogShowing","setAboutDialogShowing","newGamePromptShowing","setNewGamePromptShowing","restartGamePromptShowing","setRestartGamePromptShowing","selectGameShowing","setSelectGameShowing","selectGameCheckbox","setSelectGameCheckboxShowing","seedInput","setSeedInput","cardsLeft","menuClicked","clickedItem","callback","MenuItem","MenuItemLeft","MenuItemRight","MenuList","disabled","left","Dialog","width","aria-label","verticalAlign","textAlign","justifyContent","height","paddingLeft","paddingTop","paddingBottom","defaultChecked","type","checked","onChange","e","target","htmlFor","marginBottom","marginTop","min","parseInt","href","mapDispatchToProps","connect","ownProps","onIllegalMove","useSelector","dispatch","useDispatch","document","title","TopRow","TopRowLeft","TopRowRight","Table","Array","apply","item","Column","SmilingOverseer","App","appDiv","React","useRef","scale","setScale","handleResize","newScale","window","innerWidth","current","clientWidth","innerHeight","clientHeight","useEffect","addEventListener","_","removeEventListener","ref","transform","Boolean","location","hostname","match","combineReducers","tableReducer","menuReducer","debugStack","stack","console","log","store","configureStore","rootReducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,UAAY,+BAAiC,WAAa,OAAO,KAAO,mBAAmB,SAAW,uBAAuB,aAAe,2BAA2B,SAAW,uBAAuB,cAAgB,4BAA4B,OAAS,uB,mBCAhRD,EAAOC,QAAU,CAAC,UAAY,4BAA8B,UAAY,QAAQ,WAAa,QAAQ,aAAe,QAAQ,UAAY,OAAO,YAAc,MAAM,WAAa,OAAO,IAAM,mB,mBCA7LD,EAAOC,QAAU,CAAC,UAAY,4BAA8B,UAAY,OAAO,WAAa,OAAO,WAAa,OAAO,cAAgB,OAAO,aAAe,QAAQ,YAAc,MAAM,eAAiB,OAAO,KAAO,qB,mBCAxND,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,SAAW,6B,kLCCzBC,EAAa,EAEXC,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAc,GACdC,SAAU,CACRC,YAAa,CACXC,QADW,SACHC,EAAOC,GAAS,IAAD,EACAA,EAAOC,QAApBC,EADa,EACbA,GAAIC,EADS,EACTA,KACZC,MAAM,4BAA8BD,GACpCJ,EAAMM,KAAK,CAAEH,KAAIC,OAAMG,WAAW,KAEpCC,QANW,SAMHJ,GACN,MAAO,CAAEF,QAAS,CAAEE,OAAMD,GAAIX,QAGlCiB,WAXQ,SAWGT,EAAOC,GAChB,IAAMS,EAAOV,EAAMW,MAAK,SAAAD,GAAI,OAAIA,EAAKP,KAAOF,EAAOC,WAC/CQ,IACFA,EAAKH,WAAaG,EAAKH,e,EAMYd,EAAUmB,QAAtCd,E,EAAAA,YAEAL,G,EAFagB,WAEbhB,EAAf,S,cC3BMoB,E,WACJ,WAAYC,GAAO,oBACjBC,KAAKD,KAAOA,E,mDAKZ,OADAC,KAAKD,KAAqB,OAAZC,KAAKD,KAAgB,QAAW,WACrCC,KAAKD,MAAQ,GAAM,Q,+BAErBE,GACP,OAAOD,KAAKE,OAASD,I,8BAEfE,GACN,GAAIA,EAAKC,OAEP,IADA,IAAIC,EAAIF,EAAKC,SACJC,GAAG,CACV,IAAIC,EAAIN,KAAKO,SAASF,EAAE,GACpBG,EAAML,EAAKE,GACfF,EAAKE,GAAKF,EAAKG,GACdH,EAAKG,GAAKE,EAGf,OAAOL,M,KAwFIM,MAhBf,SAAgBV,GACd,IAAMI,EAxDR,SAA0BJ,GACtB,IAAIW,EAAa,IAAIZ,EAAOC,GAGxBY,EAAc,SAASC,EAAOC,GAG9B,IAFA,IAAIC,EAAM,GAEDT,EAAIO,EAAOP,GAAKQ,EAAKR,IAC1BS,EAAIvB,KAAKc,GAGb,OAAOS,GAGPC,EAAUJ,EAAY,EAAGK,GAAYC,KAAI,WAAc,MAAO,MAC9Dd,EAAOQ,EAAY,EAAG,IAE1BD,EAAWQ,QAAQf,GAEnBA,EAAOA,EAAKgB,UAEZ,IAAK,IAAId,EAAI,EAAGA,EAAI,GAAIA,IACpBU,EAAQV,EApBG,GAoBWd,KAAKY,EAAKE,IAGpC,IAAIe,EAAc,SAAUC,EAAMC,GAC9B,IAAIC,EAAWF,EAAO,EAClBG,EAAOC,KAAKC,MAAML,EAAO,GACvBM,EAAO,OAAOC,OAAOL,GACrBM,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAKL,GAcjF,MAZc,CACVM,IAFQH,EAAOE,EAGfF,OACAE,QACAE,IAAKP,EAAO,EACZQ,OAAQ,EACRC,IAAKX,EACLY,KAAM,QACNC,MAAgB,MAATR,GAAyB,MAATA,EAAe,QAAU,MAChDS,UAAU,IAYlB,OADgBrB,EAAQE,KALJ,SAASoB,EAAKf,GAC9B,IAAMgB,EAAaD,EAAIpB,IAAIG,GAE3B,OADAkB,EAAWC,SAAQ,SAAAlB,GAAI,OAAIA,EAAKW,OAASV,KAClCgB,KAGIE,OAIJC,CAAiB1C,GAY9B,OAVAI,EAAKuC,MAAK,SAACC,EAAGC,GAEZ,OAAID,EAAEhB,KAAOiB,EAAEjB,MACL,EACCgB,EAAEhB,KAAOiB,EAAEjB,KACb,EAGFgB,EAAEZ,IAAMa,EAAEb,OAEZ5B,GC7GF,SAASpB,EAAYE,GAC1BA,EAAM4D,oBAAqB,EAC3B5D,EAAMkB,KAAKoC,SAAQ,SAAAO,GAAC,OAAIA,EAAEV,UAAW,KAGhC,SAASW,EAAyB9D,EAAO+C,EAAQgB,GAEtD,IAAM3B,EAAOpC,EAAMkB,KAAKP,MAAK,SAAAkD,GAAC,OAAIA,EAAEV,YAEpC,GAAKf,EAGL,GAAIA,EAAKW,SAAWA,GAAwB,UAAdX,EAAKa,KAAnC,CAOA,IAAMe,EAAoBhE,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,UAAXA,EAAEZ,QAAkBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWA,KAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,IAAMU,EAAEV,OAE3HkB,EAAe,KACbC,EAAwBnE,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,UAAXA,EAAEZ,QAAkBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWX,EAAKW,UAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,IAAMU,EAAEV,OAClIoB,EAAqBD,EAAsBF,QAAO,SAAAJ,GAEtD,OAAKK,KAIDA,GAAgBL,EAAEf,MAAQoB,EAAapB,IAAM,GAAKe,EAAEX,QAAUgB,EAAahB,SAC7EgB,EAAeL,GACR,IALPK,EAAeL,GACR,MAUX,GAAkB,SAAdzB,EAAKa,KAAiB,CACxB,IAAMoB,EAAUL,EAAkB,GAClC,GAAIK,EAAQnB,QAAUd,EAAKc,OAASmB,EAAQvB,MAAQV,EAAKU,IAAM,EAG7D,OAAOhD,EAAYE,GAFnBoC,EAAKY,IAAMqB,EAAQrB,IAAM,OAM3B,GAAIgB,EAAkB7C,OAAS,EAAG,CAChC,IAAMkD,EAAUL,EAAkB,GAC5BM,EAAgBF,EAAmBzD,MAAK,SAACkD,GAC7C,OAAOQ,EAAQnB,QAAUW,EAAEX,OAASmB,EAAQvB,MAAQe,EAAEf,IAAM,KAE9D,IAAKwB,EACH,OAAOxE,EAAYE,GAGnB,IAAMuE,EAAcH,EAAmBI,MAAMJ,EAAmBK,QAAQH,IACpEtB,EAAMqB,EAAQrB,IAAM,EACxBuB,EAAYjB,SAAQ,SAAAO,GAClBA,EAAEd,OAASA,EACXc,EAAEb,IAAMA,EACRA,OAOR,GAAIe,EACF,GAAuB,WAAnBA,EACF3B,EAAKY,IAAM,OAIXmB,EAAsBO,OAAM,SAAAb,GAE1B,OAAKK,KAKDA,GAAgBL,EAAEf,MAAQoB,EAAapB,IAAM,GAAKe,EAAEX,QAAUgB,EAAahB,SAC7EW,EAAEd,OAASA,EACXmB,EAAeL,GACR,IAPPA,EAAEd,OAASA,EACXmB,EAAeL,GACR,MAWsB7D,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,UAAXA,EAAEZ,QAAkBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWX,EAAKW,UAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEV,IAAMW,EAAEX,OAClHM,SAAQ,SAACO,EAAGzC,GAAJ,OAAUyC,EAAEb,IAAM5B,UAEhD,GAAiC,IAA7B4C,EAAkB7C,OAAc,CAEzC,IACMwD,EADwB3E,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,UAAXA,EAAEZ,QAAkBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWX,EAAKW,UAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,IAAMU,EAAEV,OACxF,GAChD,GAAI2B,GAAqBvC,EAAKU,MAAQ6B,EAAkB7B,IAAM,GAAKV,EAAKc,QAAUyB,EAAkBzB,MAGlG,OAFAlD,EAAM4E,eAAiB7B,OACvB/C,EAAM6E,yBAA0B,GAIlCzC,EAAKY,IAAM,EAGbZ,EAAKW,OAASA,EACdX,EAAKe,UAAW,EAChBf,EAAKa,KAAO,QAEZ6B,EAAkB9E,QA/FhBoC,EAAKe,UAAW,EAkGb,SAAS4B,EAAwB/E,EAAO+C,GAE7C,IAAMX,EAAOpC,EAAMkB,KAAKP,MAAK,SAAAkD,GAAC,OAAIA,EAAEV,YAEpC,GAAKf,EAAL,CAGA,IAAM4C,EAAgBhF,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,WAAXA,EAAEZ,QAAmBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWA,KAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEb,IAAMY,EAAEZ,OAG5H,GAA6B,IAAzBkC,EAAc7D,QAA+B,MAAfiB,EAAKQ,MACrC,OAAO9C,EAAYE,GAIrB,GAAIgF,EAAc,IAAMA,EAAc,GAAGtC,OAASN,EAAKM,KACrD,OAAO5C,EAAYE,GAGrB,GAAIgF,EAAc,IAAMA,EAAc,GAAGlC,MAAQV,EAAKU,IAAK,EACzD,OAAOhD,EAAYE,GAGrBoC,EAAKY,IAAM,EACXZ,EAAKW,OAASA,EACdX,EAAKe,UAAW,EAChBf,EAAKa,KAAO,SAEZ6B,EAAkB9E,IAGpB,SAASiF,EAAajF,EAAOkF,GAG3B,IAFA,IAAMhE,EAAOlB,EAAMkB,KADoB,WAG9BE,GAEP,IACMiD,EADgBnD,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,UAAXA,EAAEZ,QAAkBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAW3B,KAAGqC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,IAAMU,EAAEV,OAClF,GAC9B,GAAIqB,GAAWA,EAAQ3B,OAASwC,EAAWxC,MAAQ2B,EAAQvB,MAASoC,EAAWpC,IAAM,EAKnF,OAHAuB,EAAQpB,KAAO,SACfoB,EAAQtB,OAASmC,EAAWnC,OAEtB,CAAN,EAAO+B,EAAkB9E,KATpBoB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAAC,IAAD,IAAnBA,GAAmB,kCAa5B,IAhBuC,eAgB9BA,GACP,IACM+D,EADoBjE,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,SAAXA,EAAEZ,QAAiBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAW3B,KACpD,GACnC,GAAI+D,GACEA,GAAYA,EAASzC,OAASwC,EAAWxC,MAAQyC,EAASrC,MAASoC,EAAWpC,IAAM,EAKtF,OAHAqC,EAASlC,KAAO,SAChBkC,EAASpC,OAASmC,EAAWnC,OAEvB,CAAN,EAAO+B,EAAkB9E,KATtBoB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAAC,IAAD,IAAnBA,GAAmB,mCAevB,SAAS0D,EAAkB9E,GAChC,IAAMkB,EAAOlB,EAAMkB,KAGbkE,EADalE,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,WAAXA,EAAEZ,QACRjB,KAAI,SAAA6B,GAAC,OAAIA,EAAEd,UACnCsC,EAAW,CAAC,EAAE,EAAE,EAAE,GAAG1E,MAAK,SAAAyC,GAAG,OAAKgC,EAAWE,SAASlC,WAC3CmC,IAAbF,GAEF,CAAC,IAAK,IAAK,IAAK,KAAK/B,SAAQ,SAAAZ,GAO3B,GADkBuC,EAAajF,EALd,CACf8C,IAAK,EACLJ,OACAK,OAAQsC,IAKR,OAAOP,EAAkB9E,MAK/B,IAtBuC,eAsB9BoB,GACP,IAAMoE,EAAetE,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,WAAXA,EAAEZ,QAAmBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAW3B,KAAGqC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEb,IAAMY,EAAEZ,OAChH,GAAI0C,EAAa,IACGP,EAAajF,EAAOwF,EAAa,IAGjD,MAAM,CAAN,EAAOV,EAAkB9E,KANtBoB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAAC,IAAD,IAAnBA,GAAmB,kCAU5BpB,EAAMyF,sBAAyE,IAAjDvE,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,WAAXA,EAAEZ,QAAmB9B,OCpMtE,IAAMuE,EAAa,kBAAMlD,KAAKmD,MAAsB,IAAhBnD,KAAKoD,WACnCC,EAAcH,IAEPI,EAAapG,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZsB,KAAMM,EAAOqE,GACbE,kBAAmB,OACnBnC,oBAAoB,EACpB9C,KAAM+E,GAERhG,SAAU,CACRmG,KAAM,SAAChG,EAAOC,GACZD,EAAMc,KAAOb,EAAOC,SAAWwF,IAC/B1F,EAAMkB,KAAOM,EAAOxB,EAAMc,OAE5BmF,YAAa,SAACjG,EAAOC,GACnB,IAAMiG,EAAclG,EAAMkB,KAAKP,MAAK,SAAAkD,GAAC,OAAIA,EAAEhB,MAAQ5C,EAAOC,QAAQ2C,OAE5DsD,EAAenG,EAAMkB,KAAKP,MAAK,SAAAkD,GAAC,OAAIA,EAAEV,YAG5C,GAAKgD,EAeL,GAAID,EAAYrD,MAAQsD,EAAatD,IAKrC,OAAQqD,EAAYjD,MAClB,IAAK,QAEHa,EAAyB9D,EAAOkG,EAAYnD,QAC5C,MACF,IAAK,OAEH,OAAOjD,EAAYE,GACrB,IAAK,SAEH+E,EAAwB/E,EAAOkG,EAAYnD,aAd7CmD,EAAY/C,UAAW,MAdE,UAArB+C,EAAYjD,KAEQjD,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,UAAXA,EAAEZ,QAAkBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWmD,EAAYnD,UAAQU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,IAAMU,EAAEV,OAEzH,GAAGG,UAAW,EAG5B+C,EAAY/C,UAAW,GA4B7BiD,iBAAkB,SAACpG,EAAOC,GACxB,IAAM8C,EAAS9C,EAAOC,QAEhBkC,EAAOpC,EAAMkB,KAAKP,MAAK,SAAAkD,GAAC,OAAIA,EAAEV,YAEpC,GAAKf,EAAL,CAMA,GAHsBpC,EAAMkB,KAAK+C,QAAO,SAAAJ,GAAC,MAAe,SAAXA,EAAEZ,QAAiBgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEd,SAAWA,KAGvE5B,OAAS,EACzB,OAAOrB,EAAYE,GAGrBoC,EAAKY,IAAM,EACXZ,EAAKW,OAASA,EACdX,EAAKe,UAAW,EAChBf,EAAKa,KAAO,OACZ6B,EAAkB9E,KAEpBqG,kBAAmB,SAACrG,EAAOC,GACzB8E,EAAwB/E,EAAOC,EAAOC,UAExCoG,eAAgB,SAACtG,GACfA,EAAM+F,kBAAoB,QAE5BQ,gBAAiB,SAACvG,GAChBA,EAAM+F,kBAAoB,SAE5BS,UAAW,SAACxG,EAAOC,GACjB,IAAMgD,EAAOhD,EAAOC,QAAQ+C,KACf,WAATA,EACFjD,EAAM+F,kBAAoB,QACR,SAAT9C,IACTjD,EAAM+F,kBAAoB,SAG9BU,cAAe,SAACzG,EAAOC,GACrB6D,EAAyB9D,EAAOC,EAAOC,UAEzCwG,kBAAmB,SAAC1G,EAAOC,GAEzB,IAAMiG,EAAclG,EAAMkB,KAAKP,MAAK,SAAAkD,GAAC,OAAIA,EAAEhB,MAAQ5C,EAAOC,QAAQ2C,OAKlE,GAHAqD,EAAY/C,UAAW,EAGE,UAArB+C,EAAYjD,KAAhB,CAKA,IAAM0D,EAAY3G,EAAMkB,KAAK+C,QAAO,SAAC7B,GAAD,MAAwB,SAAdA,EAAKa,QAEnD,GAAI0D,EAAUxF,OAAS,EAAG,CACxB+E,EAAYjD,KAAO,OACnBiD,EAAYlD,IAAM,EAElB,IAAMoC,EAAauB,EAAU3E,KAAI,SAAAI,GAAI,OAAIA,EAAKW,UACxCsC,EAAW,CAAC,EAAE,EAAE,EAAE,GAAG1E,MAAK,SAAAyC,GAAG,OAAKgC,EAAWE,SAASlC,MAC5D8C,EAAYnD,OAASsC,EAEvBP,EAAkB9E,KAEpB4G,uBAAwB,SAAC5G,GACvBA,EAAM4D,oBAAqB,GAE7BiD,oBAAqB,SAAC7G,GACpBA,EAAMyF,uBAAwB,GAEhCqB,eAAgB,SAAC9G,GACfA,EAAM6E,yBAA0B,EAChCf,EAAyB9D,EAAOA,EAAM4E,eAAgB,WAExDmC,WAAY,SAAC/G,GACXA,EAAM6E,yBAA0B,EAChCf,EAAyB9D,EAAOA,EAAM4E,eAAgB,WAExDoC,uBAAwB,SAAChH,GACvBA,EAAM6E,yBAA0B,M,EAoBlCiB,EAAWlF,QAdboF,E,EAAAA,KACAC,E,EAAAA,YACAG,E,EAAAA,iBACAC,E,EAAAA,kBACAC,E,EAAAA,eACAC,E,EAAAA,gBACAC,E,EAAAA,UACAC,E,EAAAA,cACAC,E,EAAAA,kBACAE,E,EAAAA,uBACAC,E,EAAAA,oBACAC,E,EAAAA,eACAC,E,EAAAA,WACAC,E,EAAAA,uBAgBWC,EAAa,SAAAjH,GAAK,OAAIA,EAAMkH,MAAMhG,MAClCiG,EAA2B,SAAAnH,GAAK,OAAIA,EAAMkH,MAAMtD,oBAChDwD,EAA0B,SAAApH,GAAK,OAAIA,EAAMkH,MAAMnB,mBAC/CsB,EAAa,SAAArH,GAAK,OAAIA,EAAMkH,MAAMpG,MAClCwG,EAA8B,SAAAtH,GAAK,OAAIA,EAAMkH,MAAMzB,uBACnD8B,EAAgC,SAAAvH,GAAK,OAAIA,EAAMkH,MAAMrC,yBAEnDiB,IAAf,Q,iBC/Je0B,MA5Bf,SAAcC,GAAQ,IAElB/E,EASE+E,EATF/E,KACAE,EAQE6E,EARF7E,MACAG,EAOE0E,EAPF1E,OACAC,EAMEyE,EANFzE,IACAC,EAKEwE,EALFxE,KACAE,EAIEsE,EAJFtE,SACAuE,EAGED,EAHFC,QACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,aAGF,OACE,yBACEC,MAAO,CAACC,gBAAgB,cAAD,OAAelF,EAAMmF,eAArB,OAAqCrF,EAAKqF,cAA1C,UACvBC,UAAS,UAAKC,IAAOT,MACrBU,cAAanF,EACboF,WAAUnF,EACVoF,YAAWnF,EACXoF,aAAYzF,EACZ0F,gBAAenF,EACfuE,QAASA,EACTC,cAAeA,EACfC,aAAcA,K,oBChBLW,OARf,SAAmBd,GAAQ,IACjB/E,EAA0B+E,EAA1B/E,KAAM8F,EAAoBf,EAApBe,OAAQd,EAAYD,EAAZC,QACtB,OAAO,yBACLG,MAAO,CAACC,gBAAgB,cAAD,OAAeU,GAAf,OAAwB9F,EAAxB,UACvBsF,UAAS,UAAKC,KAAOM,WACrBb,QAASA,K,sCCMEe,G,yKAVH,IAAD,EACyB1H,KAAK0G,MAA7BiB,EADD,EACCA,UAAWC,EADZ,EACYA,SAEnB,OAAO,yBAAKX,UAAS,UAAKC,KAAOW,WAC7BD,EAEA,KADA,yBAAKE,IAAG,0BAAqBH,EAArB,QAAsCI,IAAI,yB,GANnCC,a,4CCAhB,SAASC,GAAKvB,GAAQ,IAEzBvG,EAYEuG,EAZFvG,KACA+H,EAWExB,EAXFwB,QACAC,EAUEzB,EAVFyB,KACAtF,EASE6D,EATF7D,mBACAuF,EAQE1B,EARF0B,oBACAC,EAOE3B,EAPF2B,gBACAC,EAME5B,EANF4B,iBACAxE,EAKE4C,EALF5C,wBACAyE,EAIE7B,EAJF6B,iBACAC,EAGE9B,EAHF8B,aACAC,EAEE/B,EAFF+B,mBACA1I,EACE2G,EADF3G,KAbwB,EAeI2I,oBAAS,GAfb,mBAelBC,EAfkB,KAeVC,EAfU,OAgBAF,mBAAS,QAhBT,mBAgBlBG,EAhBkB,KAgBZC,EAhBY,OAiB4BJ,oBAAS,GAjBrC,mBAiBlBK,EAjBkB,KAiBEC,EAjBF,OAkBgCN,oBAAS,GAlBzC,mBAkBlBO,EAlBkB,KAkBIC,EAlBJ,OAmBwCR,oBAAS,GAnBjD,mBAmBlBS,EAnBkB,KAmBQC,EAnBR,OAoB0BV,oBAAS,GApBnC,mBAoBlBW,EApBkB,KAoBCC,EApBD,OAqBmCZ,oBAAS,GArB5C,mBAqBlBa,EArBkB,KAqBEC,EArBF,OAsBUd,mBAAS3I,GAtBnB,mBAsBlB0J,EAtBkB,KAsBPC,EAtBO,KAuBpBC,EAAYxJ,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,WAAXA,EAAEZ,QAAmB9B,OAExD,SAASwJ,EAAYf,GACnBC,EAAQD,GACRD,GAAWD,GAGb,SAASkB,EAAYC,GACnBlB,GAAU,GACVkB,IAGF,OACE,yBAAK7C,UAAWC,KAAOe,MACrB,yBACEhB,UAAS,UAAKC,KAAO6C,SAAZ,YAAwB7C,KAAO8C,cACxCrD,QAAS,kBAAMiD,EAAY,SAC3B/C,aAAc,kBAAMiC,EAAQ,UAH9B,QAOA,yBACE7B,UAAS,UAAKC,KAAO6C,SAAZ,YAAwB7C,KAAO8C,cACxCrD,QAAS,kBAAMiD,EAAY,SAC3B/C,aAAc,kBAAMiC,EAAQ,UAH9B,QAOA,yBAAK7B,UAAS,UAAKC,KAAO6C,SAAZ,YAAwB7C,KAAO+C,gBAA7C,eAA4EN,GAC1EhB,GAAmB,SAATE,EACV,yBAAK5B,UAAWC,KAAOgD,UACrB,yBAAKvD,QAAS,kBAAMkD,GAAY,kBAAMX,GAAwB,QAA9D,YACA,yBAAKvC,QAAS,kBAAMkD,GAAY,kBAAMP,GAAqB,QAA3D,eACA,yBAAK3C,QAAS,kBAAMkD,GAAY,kBAAMT,GAA4B,QAAlE,gBACA,yBAAKzC,QAAS,kBAAMkD,EAAY1B,IAAOgC,UAAU,GAAjD,SAEF,KACAxB,GAAmB,SAATE,EACV,yBAAK5B,UAAWC,KAAOgD,SAAUpD,MAAO,CAAEsD,KAAM,SAC9C,yBAAKzD,QAAS,kBAAMkD,GAAY,kBAAMb,GAAsB,QAA5D,aAIF,KAEAC,GAAwBE,EACxB,yBAAKlC,UAAWC,KAAOmD,QACrB,yBAAKvD,MAAO,CAAEwD,MAAO,SAAWrD,UAAU,UACxC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,sBACb,4BAAQsD,aAAW,YAIvB,yBAAKtD,UAAU,eACb,yBAAKa,IAAG,aAAgBC,IAAI,cAAcjB,MAAO,CAAE0D,cAAc,YACjE,0BAAM1D,MAAO,CAAE2D,UAAW,WAA1B,oCACA,yBAAKxD,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,WAClD,4BAAQ/D,QAAS,WACXwC,GACFjB,EAAQnI,GACRqJ,GAA4B,KAE5BlB,IACAgB,GAAwB,MAN5B,OASA,4BAAQvC,QAAS,kBAAMuC,GAAwB,KAA/C,UAKR,KAEAb,EACA,yBAAKpB,UAAWC,KAAOmD,QACrB,yBAAKvD,MAAO,CAAEwD,MAAO,SAAWrD,UAAU,UACxC,yBAAKA,UAAU,YAAYH,MAAO,CAAC6D,OAAQ,SACzC,yBAAK1D,UAAU,kBAAf,cAGF,yBAAKA,UAAU,eACb,uBAAGH,MAAO,CAAE2D,UAAW,WAAvB,6BACA,uBAAG3D,MAAO,CAAE2D,UAAW,WAAvB,8BACA,yBACExD,UAAU,YACVH,MAAO,CACL8D,YAAa,OACbC,WAAY,OACZC,cAAe,QAGjB,2BACEC,gBAAc,EACdC,KAAK,WACL5L,GAAG,aACH6L,QAAS1B,EACT2B,SAAU,SAACC,GAAD,OAAO3B,EAA6B2B,EAAEC,OAAOH,YACzD,2BAAOI,QAAQ,cAAf,gBAEF,yBAAKpE,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,SAAUY,aAAc,SAC1E,4BAAQ3E,QAAS,WACX4C,GACFD,GAAqB,GACrBhB,MAEAJ,IACAI,OANJ,OASA,4BAAQ3B,QAAS,kBAAM2B,MAAvB,UAKR,KAEAxE,EACA,yBAAKmD,UAAWC,KAAOmD,QACrB,yBAAKvD,MAAO,CAAEwD,MAAO,SAAWrD,UAAU,UACxC,yBAAKA,UAAU,YAAYH,MAAO,CAAC6D,OAAQ,SACzC,yBAAK1D,UAAU,kBAAf,4BAGF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,SAAUa,UAAW,SACvE,4BACEzE,MAAO,CAAEwD,MAAO,SAChB3D,QAAS,WACP6B,MAHJ,gBASF,yBAAKvB,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,SAAUa,UAAW,SACvE,4BACEzE,MAAO,CAAEwD,MAAO,SAChB3D,QAAS,WACP4B,MAHJ,qBASF,yBAAKtB,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,SAAUa,UAAW,OAAQD,aAAc,SAC7F,4BAAQ3E,QAAS,WACf8B,MADF,cAOR,KAEAY,EACA,yBAAKpC,UAAWC,KAAOmD,QACrB,yBAAKvD,MAAO,CAAEwD,MAAO,SAAWrD,UAAU,UACxC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAf,eACA,yBAAKA,UAAU,sBACb,4BAAQsD,aAAW,YAIvB,yBAAKtD,UAAU,cAAcH,MAAO,CAAE2D,UAAW,WAC/C,kDAAuB,6BAAvB,qBACA,2BACE,2BACEO,KAAK,OACLnJ,MAAO4H,EACPyB,SAAU,SAACC,GACTA,EAAEC,OAAOvJ,MAAQJ,KAAK+J,IAAI,IAASC,SAASN,EAAEC,OAAOvJ,SAAW,EAChE6H,EAAayB,EAAEC,OAAOvJ,QAExBiF,MAAO,CAAE8D,YAAY,UAGzB,yBAAK3D,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,WAClD,4BAAQ/D,QAAS,WACfuB,EAAQuB,GACRH,GAAqB,KAFvB,UAQR,KAEAzG,EACA,yBAAKoE,UAAWC,KAAOmD,QACrB,yBAAKvD,MAAO,CAAEwD,MAAO,SAAWrD,UAAU,UACxC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,sBACb,4BAAQsD,aAAW,YAIvB,yBAAKtD,UAAU,eACb,yBAAKa,IAAG,aAAgBC,IAAI,cAAcjB,MAAO,CAAE0D,cAAc,YACjE,0BAAM1D,MAAO,CAAE2D,UAAW,WAA1B,6BACA,yBAAKxD,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,WAClD,4BAAQ/D,QAAS,kBAAMyB,MAAvB,UAKR,KAEAW,EACA,yBAAK9B,UAAWC,KAAOmD,QACrB,yBAAKvD,MAAO,CAAEwD,MAAO,SAAWrD,UAAU,UACxC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,sBACb,4BAAQsD,aAAW,YAIvB,yBAAKtD,UAAU,eACZ,yBAAKa,IAAG,aAAgBC,IAAI,cAAcjB,MAAO,CAAE0D,cAAc,YAClE,0BAAM1D,MAAO,CAAE2D,UAAW,WAA1B,YACA,iCAAM,uBAAGiB,KAAK,uBAAR,oBACN,6NACA,+FAAoE,uBAAGA,KAAK,+BAAR,yBAApE,iCACA,yBAAKzE,UAAU,YAAYH,MAAO,CAAE4D,eAAgB,WAClD,4BAAQ/D,QAAS,kBAAMqC,GAAsB,KAA7C,UAKR,MCrOR,IAIM2C,GAAqB,CAAE5M,eA+Ed6M,gBAnFS,SAAC3M,EAAO4M,GAAR,MAAsB,CAC5CC,cAAeD,EAASC,iBAqFxBH,GAHaC,EA7ED,SAAC,GAAoB,EAAlB7M,YAAmB,IAC5BoB,EAAO4L,YAAY7F,GACnBrD,EAAqBkJ,YAAY3F,GACjCpB,EAAoB+G,YAAY1F,GAChCtG,EAAOgM,YAAYzF,GACnB5B,EAAwBqH,YAAYxF,GACpCzC,EAA0BiI,YAAYvF,GACtCwF,EAAWC,cACXrE,EAA4D,IAAjDzH,EAAK+C,QAAO,SAAAJ,GAAC,MAAe,WAAXA,EAAEZ,QAAmB9B,OAQvD,OAFA8L,SAASC,MAAT,yBAAmCpM,GAGjC,6BACE,kBAACkI,GAAD,CACE9H,KAAMA,EACNJ,KAAMA,EACNmI,QAAS,SAACnI,GAAD,OAAUiM,EAAS/G,EAAKlF,KACjCoI,KAAM,WAXV7I,MAAM,SAYFuD,mBAAoBA,EACpBuF,oBAAqB,kBAAM4D,EAASnG,MACpCwC,gBAAiB3D,EACjB4D,iBAAkB,kBAAM0D,EAASlG,MACjChC,wBAAyBA,EACzByE,iBAAkB,kBAAMyD,EAASjG,MACjCyC,aAAc,kBAAMwD,EAAShG,MAC7ByC,mBAAoB,kBAAMuD,EAAS/F,QAErC,yBAAKgB,UAAWC,KAAOkF,QACrB,yBAAKnF,UAAWC,KAAOmF,WAAYxF,aAAc,kBAAMmF,EAASzG,OAC9D,kBAAC,GAAD,CAAWoB,QAAS,kBAAMqF,EAAS3G,EAAiB,OACpD,kBAAC,GAAD,CAAWsB,QAAS,kBAAMqF,EAAS3G,EAAiB,OACpD,kBAAC,GAAD,CAAWsB,QAAS,kBAAMqF,EAAS3G,EAAiB,OACpD,kBAAC,GAAD,CAAWsB,QAAS,kBAAMqF,EAAS3G,EAAiB,QAEtD,kBAAC,GAAD,CAAUsC,UAAW3C,EAAmB4C,SAAUA,IAClD,yBAAKX,UAAWC,KAAOoF,YAAazF,aAAc,kBAAMmF,EAASxG,OAC/D,kBAAC,GAAD,CAAWmB,QAAS,kBAAMqF,EAAS1G,EAAkB,OACrD,kBAAC,GAAD,CAAWqB,QAAS,kBAAMqF,EAAS1G,EAAkB,OACrD,kBAAC,GAAD,CAAWqB,QAAS,kBAAMqF,EAAS1G,EAAkB,OACrD,kBAAC,GAAD,CAAWqB,QAAS,kBAAMqF,EAAS1G,EAAkB,SAGzD,yBAAK2B,UAAWC,KAAOqF,OACpBC,MAAMC,MAAM,KAAMD,MAAM,IAAIvL,KAAI,SAACyL,EAAMpL,GACtC,OAAO,yBACLQ,IAAKR,EACL2F,UAAWC,KAAOyF,OAClBhG,QAAS,kBAAMqF,EAAStG,EAAcpE,WAI3CnB,EAAKc,KAAI,SAACI,GACT,OAAO,kBAAC,EAAD,CACLS,IAAKT,EAAKS,IACVH,KAAMN,EAAKM,KACXE,MAAOR,EAAKQ,MACZG,OAAQX,EAAKW,OACbC,IAAKZ,EAAKY,IACVC,KAAMb,EAAKa,KACXE,SAAUf,EAAKe,SACfuE,QAAS,kBAAMqF,EAAS9G,EAAY7D,KACpCuF,cAAe,kBAAMoF,EAASrG,EAAkBtE,KAChDwF,aAAc,kBAAMmF,EAASvG,EAAUpE,UAG1CuG,EACC,yBAAKE,IAAI,4BAA4BC,IAAI,eAAed,UAAWC,KAAO0F,kBAC1E,SC3EOC,OA7Bf,WACE,IAAMC,EAASC,IAAMC,OAAO,MADf,EAEatE,mBAAS,IAFtB,mBAENuE,EAFM,KAECC,EAFD,KAIb,SAASC,IACP,IAAMC,EAAW3L,KAAK+J,IACpB6B,OAAOC,WAAaR,EAAOS,QAAQC,YACnCH,OAAOI,YAAcX,EAAOS,QAAQG,cAEtCR,EAASE,GAYX,OATAL,IAAMY,WAAU,WAGd,OAFAN,OAAOO,iBAAiB,SAAUT,GAClCA,IACO,SAAAU,GACLR,OAAOS,oBAAoB,SAAUX,OAMvC,yBAAKY,IAAKjB,EAAQ7F,UAAWC,IAAO2F,IAAK/F,MAAO,CAAEkH,UAAU,SAAD,OAAWf,EAAX,OAEzD,kBAAC,GAAD,QCjBcgB,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2D,YCdSC,gBAAgB,CAC7BlI,MAAOmI,EACPzF,KAAM0F,ICGRlB,OAAOmB,WAAa,SAASC,GAC3BA,EAAMlM,SAAQ,SAAAlB,GAAI,OAAIqN,QAAQC,IAAItN,EAAKM,KAAMN,EAAKQ,MAAOR,EAAKc,MAAOd,EAAKU,SAG5E,IAAM6M,GAAQC,YAAe,CAC3B7P,QAAS8P,KAGXC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,QAGJ1C,SAASgD,eAAe,SF4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhB,QAAQgB,MAAMA,EAAMC,a,kBGxI5BpR,EAAOC,QAAU,CAAC,UAAY,+BAAiC,UAAY,QAAQ,WAAa,QAAQ,aAAe,QAAQ,UAAY,OAAO,YAAc,MAAM,WAAa,OAAO,OAAS,sBAAsB,WAAa,0BAA0B,YAAc,2BAA2B,MAAQ,qBAAqB,OAAS,sBAAsB,gBAAkB,kC","file":"static/js/main.784f1a0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"constants\":\"\\\"../../Constants.module.css\\\"\",\"menuHeight\":\"20px\",\"Menu\":\"Menu_Menu__ySKF0\",\"MenuItem\":\"Menu_MenuItem__1_gke\",\"MenuItemLeft\":\"Menu_MenuItemLeft__2AjAh\",\"MenuList\":\"Menu_MenuList__b97po\",\"MenuItemRight\":\"Menu_MenuItemRight__1kH1x\",\"Dialog\":\"Menu_Dialog__3oTEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constants\":\"\\\"../Constants.module.css\\\"\",\"gameWidth\":\"632px\",\"gameHeight\":\"480px\",\"topRowHeight\":\"106px\",\"cardWidth\":\"71px\",\"cardPadding\":\"7px\",\"menuHeight\":\"20px\",\"App\":\"App_App__2s_Fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constants\":\"\\\"../Constants.module.css\\\"\",\"cardWidth\":\"71px\",\"cardHeight\":\"96px\",\"menuHeight\":\"20px\",\"overseerWidth\":\"64px\",\"topRowHeight\":\"106px\",\"cardPadding\":\"7px\",\"cardTopShowing\":\"18px\",\"Card\":\"Card_Card__1k9eP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardSpace\":\"CardSpace_CardSpace__3db5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overseer\":\"Overseer_overseer__1sYiJ\"};","import { createSlice } from '@reduxjs/toolkit'\n\nlet nextTodoId = 0\n\nconst menuSlice = createSlice({\n  name: 'menu',\n  initialState: [],\n  reducers: {\n    illegalMove: {\n      reducer(state, action) {\n        const { id, text } = action.payload\n        alert('Hello illegalMove slice! ' + text);\n        state.push({ id, text, completed: false })\n      },\n      prepare(text) {\n        return { payload: { text, id: nextTodoId++ } }\n      }\n    },\n    toggleTodo(state, action) {\n      const todo = state.find(todo => todo.id === action.payload)\n      if (todo) {\n        todo.completed = !todo.completed\n      }\n    }\n  }\n})\n\nexport const { illegalMove, toggleTodo } = menuSlice.actions\n\nexport default menuSlice.reducer\n","// Modified from https://rosettacode.org/wiki/Deal_cards_for_FreeCell#JavaScript\n\nclass MSRand {\n  constructor(seed) {\n    this.seed = seed;\n  }\n\n  rand() {\n    this.seed = ((this.seed * 214013 + 2531011) & 0x7FFFFFFF);\n    return ((this.seed >> 16) & 0x7fff);\n  }\n  max_rand(mymax) {\n    return this.rand() % mymax;\n  }\n  shuffle(deck) {\n    if (deck.length) {\n      var i = deck.length;\n      while (--i) {\n        var j = this.max_rand(i+1);\n        var tmp = deck[i];\n        deck[i] = deck[j];\n         deck[j] = tmp;\n      }\n    }\n    return deck;\n  }\n}\n\n/*\n * Microsoft Windows Freecell / Freecell Pro boards generation.\n *\n * See:\n *\n * - http://rosettacode.org/wiki/Deal_cards_for_FreeCell\n *\n * - http://www.solitairelaboratory.com/mshuffle.txt\n *\n * Under MIT/X11 Licence.\n *\n * */\n \nfunction deal_ms_fc_board(seed) {\n    var randomizer = new MSRand(seed);\n    var num_cols = 8;\n \n    var _perl_range = function(start, end) {\n        var ret = [];\n \n        for (var i = start; i <= end; i++) {\n            ret.push(i);\n        }\n \n        return ret;\n    };\n \n    var columns = _perl_range(0, num_cols-1).map(function () { return []; });\n    var deck = _perl_range(0, 4*13-1);\n \n    randomizer.shuffle(deck);\n \n    deck = deck.reverse()\n \n    for (var i = 0; i < 52; i++) {\n        columns[i % num_cols].push(deck[i]);\n    }\n \n    var render_card = function (card, index) {\n        var suitInt = (card % 4);\n        var rank = Math.floor(card / 4);\n        const suit = \"CDHS\".charAt(suitInt);\n        const value = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'][rank];\n        const key = suit + value;\n        var cardObj = {\n            key,\n            suit,\n            value,\n            int: rank + 1,\n            column: 0, // fill this in later\n            row: index,\n            area: 'table',\n            color: suit === 'S' || suit === 'C' ? 'black' : 'red',\n            selected: false\n          };\n \n        return cardObj;\n    }\n \n    var render_column = function(col, index) {\n        const cardsInCol = col.map(render_card);\n        cardsInCol.forEach(card => card.column = index);\n        return cardsInCol;\n    }\n    const deckArr = columns.map(render_column);\n    return deckArr.flat();;\n}\n\nfunction Dealer(seed) {\n  const deck = deal_ms_fc_board(seed);\n  // Sort so react keeps track of them better\n  deck.sort((a, b) => {\n    // Sort by suit first\n    if (a.suit < b.suit) {\n      return -1;\n    } else if (a.suit > b.suit) {\n      return 1;\n    }\n    // Then sort by value\n    return a.int - b.int;\n  });\n  return deck;\n}\n\nexport default Dealer;","export function illegalMove(state) {\n  state.illegalMoveShowing = true;\n  state.deck.forEach(c => c.selected = false);\n}\n\nexport function moveSelectedCardToColumn(state, column, singleOrColumn) {\n  // Find a selected card\n  const card = state.deck.find(c => c.selected);\n  // Only has an action if a card is selected\n  if (!card) return;\n\n  // Same column\n  if (card.column === column && card.area === 'table') {\n    // Deselect it.\n    card.selected = false;\n    return;\n  }\n\n  // Find the top card in that column\n  const cardsInDestColumn = state.deck.filter(c => c.area === 'table').filter(c => c.column === column).sort((a, b) => b.row - a.row);\n\n  let previousCard = null;\n  const cardsInSelectedColumn = state.deck.filter(c => c.area === 'table').filter(c => c.column === card.column).sort((a, b) => b.row - a.row);\n  const cardsInSourceStack = cardsInSelectedColumn.filter(c => {\n    // First card. It moves.\n    if (!previousCard) {\n      previousCard = c;\n      return true;\n    }\n    if (previousCard && c.int === previousCard.int + 1 && c.color !== previousCard.color) {\n      previousCard = c;\n      return true;\n    }\n    // Card doesn't match the order so stop iterating\n    return false;\n  });\n\n  if (card.area === 'hold') {\n    const topCard = cardsInDestColumn[0];\n    if (topCard.color !== card.color && topCard.int === card.int + 1) {\n      card.row = topCard.row + 1;\n    } else {\n      return illegalMove(state);\n    }\n  } else {\n    // Check for illegal moves.\n    if (cardsInDestColumn.length > 0) {\n      const topCard = cardsInDestColumn[0];\n      const legalCardMove = cardsInSourceStack.find((c) => {\n        return topCard.color !== c.color && topCard.int === c.int + 1;\n      })\n      if (!legalCardMove) {\n        return illegalMove(state);\n      } else {\n        // TODO: check how many moves can be made before making them.\n        const cardsToMove = cardsInSourceStack.slice(cardsInSourceStack.indexOf(legalCardMove));\n        let row = topCard.row + 1;\n        cardsToMove.forEach(c => {\n          c.column = column;\n          c.row = row;\n          row++;\n        });\n      }\n    }\n  }\n\n \n  if (singleOrColumn) {\n    if (singleOrColumn === 'single') {\n      card.row = 0;\n    } else {\n      // TODO: check how many moves can be made before making them.\n      // Move cards until mis-matching order.\n      cardsInSelectedColumn.every(c => {\n        // First card. It moves.\n        if (!previousCard) {\n          c.column = column;\n          previousCard = c;\n          return true;\n        }\n        if (previousCard && c.int === previousCard.int + 1 && c.color !== previousCard.color) {\n          c.column = column;\n          previousCard = c;\n          return true;\n        }\n        // Card doesn't match the order so stop iterating\n        return false;\n      });\n      // Set the rows in the new column\n      const cardsInNewColumnReversed = state.deck.filter(c => c.area === 'table').filter(c => c.column === card.column).sort((a, b) => a.row - b.row);\n      cardsInNewColumnReversed.forEach((c, i) => c.row = i);\n    }\n  } else if (cardsInDestColumn.length === 0) {\n    // Check if we should prompt about moving the whole column\n    const cardsInSelectedColumn = state.deck.filter(c => c.area === 'table').filter(c => c.column === card.column).sort((a, b) => b.row - a.row);\n    const underSelectedCard = cardsInSelectedColumn[1];\n    if (underSelectedCard && card.int === underSelectedCard.int - 1 && card.color !== underSelectedCard.color) {\n      state.selectedColumn = column;\n      state.moveColumnDialogShowing = true;\n      return;\n    }\n\n    card.row = 0;\n  }\n  \n  card.column = column;\n  card.selected = false;\n  card.area = 'table';\n\n  checkForAutoMoves(state);\n}\n\nexport function moveSelectedCardToStack(state, column) {\n  // Find a selected card\n  const card = state.deck.find(c => c.selected);\n  // Only has an action if a card is selected\n  if (!card) return;\n\n  // Find the top card in that column\n  const cardsInColumn = state.deck.filter(c => c.area === 'stacks').filter(c => c.column === column).sort((a, b) => b.int - a.int);\n  // Check if illegal moves\n  // Empty stack - Can only put an ace down\n  if (cardsInColumn.length === 0 && card.value !== 'A') {\n    return illegalMove(state);\n  }\n\n  // Has cards in stack with wrong suit.\n  if (cardsInColumn[0] && cardsInColumn[0].suit !== card.suit) {\n    return illegalMove(state);\n  }\n  // Has cards in stack. Same suit. Must be one value lower.\n  if (cardsInColumn[0] && cardsInColumn[0].int !== card.int -1) {\n    return illegalMove(state);\n  }\n  \n  card.row = 0;\n  card.column = column;\n  card.selected = false;\n  card.area = 'stacks';\n\n  checkForAutoMoves(state);\n}\n\nfunction moveNextCard(state, targetCard) {\n  const deck = state.deck;\n  // Check each columm\n  for (let i = 0; i < 8; i++) {\n    // Find the top card in that column\n    const cardsInColumn = deck.filter(c => c.area === 'table').filter(c => c.column === i).sort((a, b) => b.row - a.row);\n    const topCard = cardsInColumn[0];\n    if (topCard && topCard.suit === targetCard.suit && topCard.int === (targetCard.int + 1)) {      \n      // Move card\n      topCard.area = 'stacks';\n      topCard.column = targetCard.column;\n      // Change made, check again.\n      return checkForAutoMoves(state);\n    }\n  }\n  // Look in hold area\n  for (let i = 0; i < 4; i++) {\n    const cardsInHoldColumn = deck.filter(c => c.area === 'hold').filter(c => c.column === i);\n    const holdCard = cardsInHoldColumn[0];\n    if (holdCard) {\n      if (holdCard && holdCard.suit === targetCard.suit && holdCard.int === (targetCard.int + 1)) {\n        // Move card\n        holdCard.area = 'stacks';\n        holdCard.column = targetCard.column;\n        // Change made, check again.\n        return checkForAutoMoves(state);\n      }\n    }\n  }\n}\n\nexport function checkForAutoMoves(state) {\n  const deck = state.deck;\n  // Find the first free spot.\n  const stackCards = deck.filter(c => c.area === 'stacks');\n  const takenSpots = stackCards.map(c => c.column);\n  const freeSpot = [0,1,2,3].find(col => !takenSpots.includes(col));\n  if (freeSpot !== undefined) {\n    // Look for aces\n    ['S', 'D', 'H', 'C'].forEach(suit => {\n      const fakeCard = {\n        int: 0, // one less than an ace\n        suit,\n        column: freeSpot,\n      }\n      const movedCard = moveNextCard(state, fakeCard);\n      if (movedCard) {\n        // Something changed, check again.\n        return checkForAutoMoves(state);\n      }\n    });\n  }\n  // Check each stacked column\n  for (let i = 0; i < 4; i++) {\n    const cardsInStack = deck.filter(c => c.area === 'stacks').filter(c => c.column === i).sort((a, b) => b.int - a.int);\n    if (cardsInStack[0]) {\n      const movedCard = moveNextCard(state, cardsInStack[0]);\n      if (movedCard) {\n        // Something changed, check again.\n        return checkForAutoMoves(state);\n      }\n    }\n  }\n  state.gameOverDialogShowing = deck.filter(c => c.area !== 'stacks').length === 0;\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport Dealer from './Dealer.js';\nimport { \n  illegalMove, \n  moveSelectedCardToColumn, \n  moveSelectedCardToStack,\n  checkForAutoMoves,\n} from './Helpers.js';\n\n// 1 million because Microsoft originally only did 1 million of them.\nconst randomSeed = () => Math.round(Math.random() * 1000000);\nconst initialSeed = randomSeed();\n\nexport const tableSlice = createSlice({\n  name: 'table',\n  initialState: {\n    deck: Dealer(initialSeed),\n    overseerDirection: 'left',\n    illegalMoveShowing: false,\n    seed: initialSeed,\n  },\n  reducers: {\n    deal: (state, action) => {\n      state.seed = action.payload || randomSeed();\n      state.deck = Dealer(state.seed);\n    },\n    cardClicked: (state, action) => {\n      const clickedCard = state.deck.find(c => c.key === action.payload.key);\n      // Find a selected card (if exists)\n      const selectedCard = state.deck.find(c => c.selected);\n\n      // Nothing is selected so select one\n      if (!selectedCard) {\n        // Only select the top card if it's on the table\n        if (clickedCard.area === 'table') {\n          // Find everything in that column\n          const cardsInColumn = state.deck.filter(c => c.area === 'table').filter(c => c.column === clickedCard.column).sort((a, b) => b.row - a.row);\n          // Select top card in column\n          cardsInColumn[0].selected = true;\n        } else {\n          // Select card in stacks or hold\n          clickedCard.selected = true;\n        }\n        return;\n      }\n\n      // Clicked on the selected card. Unselect it.\n      if (clickedCard.key === selectedCard.key) {\n        clickedCard.selected = false;\n        return;\n      }\n\n      switch (clickedCard.area) {\n        case 'table':\n          // Move a card on top of another\n          moveSelectedCardToColumn(state, clickedCard.column);\n          break;\n        case 'hold':\n          // Illegal move\n          return illegalMove(state);\n        case 'stacks':\n          // Move to stacks\n          moveSelectedCardToStack(state, clickedCard.column);\n          break;\n        default:\n          break;\n      }\n\n    },\n    holdSpaceClicked: (state, action) => {\n      const column = action.payload;\n      // Find a selected card\n      const card = state.deck.find(c => c.selected);\n      // Only has an action if a card is selected\n      if (!card) return;\n\n      // Check if there's something there already\n      const cardsInColumn = state.deck.filter(c => c.area === 'hold').filter(c => c.column === column);\n      // Check if illegal moves\n      // Is there a card there already\n      if (cardsInColumn.length > 0) {\n        return illegalMove(state);\n      }\n      \n      card.row = 0;\n      card.column = column;\n      card.selected = false; \n      card.area = 'hold';\n      checkForAutoMoves(state);\n    },\n    stackSpaceClicked: (state, action) => {\n      moveSelectedCardToStack(state, action.payload);\n    },\n    holdSpaceHover: (state) => {\n      state.overseerDirection = 'left';\n    },\n    stackSpaceHover: (state) => {\n      state.overseerDirection = 'right';\n    },\n    cardHover: (state, action) => {\n      const area = action.payload.area;\n      if (area === 'stacks') {\n        state.overseerDirection = 'right';\n      } else if (area === 'hold') {\n        state.overseerDirection = 'left';\n      }\n    },\n    columnClicked: (state, action) => {\n      moveSelectedCardToColumn(state, action.payload);\n    },\n    cardDoubleClicked: (state, action) => {\n      // Double click usually puts the card in the hold spots\n      const clickedCard = state.deck.find(c => c.key === action.payload.key);\n\n      clickedCard.selected = false;\n\n      // Nothing to do if it's stacked or already in temp area\n      if (clickedCard.area !== 'table') {\n        return;\n      }\n\n      // Find the cards in hold already\n      const holdCards = state.deck.filter((card) => card.area === 'hold');\n      // Check if there are spots\n      if (holdCards.length < 4) {\n        clickedCard.area = 'hold';\n        clickedCard.row = 0;\n        // Find the free spot.\n        const takenSpots = holdCards.map(card => card.column);\n        const freeSpot = [0,1,2,3].find(col => !takenSpots.includes(col));\n        clickedCard.column = freeSpot;\n      }\n      checkForAutoMoves(state);\n    },\n    closeIllegalMoveDialog: (state) => {\n      state.illegalMoveShowing = false;\n    },\n    closeGameOverDialog: (state) => {\n      state.gameOverDialogShowing = false;\n    },\n    moveSingleCard: (state) => {\n      state.moveColumnDialogShowing = false;\n      moveSelectedCardToColumn(state, state.selectedColumn, 'single');\n    },\n    moveColumn: (state) => {\n      state.moveColumnDialogShowing = false;\n      moveSelectedCardToColumn(state, state.selectedColumn, 'column');\n    },\n    cancelMoveColumnDialog: (state) => {\n      state.moveColumnDialogShowing = false;\n    },\n  },\n});\n\nexport const { \n  deal, \n  cardClicked,\n  holdSpaceClicked,\n  stackSpaceClicked,\n  holdSpaceHover,\n  stackSpaceHover,\n  cardHover,\n  columnClicked,\n  cardDoubleClicked,\n  closeIllegalMoveDialog,\n  closeGameOverDialog,\n  moveSingleCard,\n  moveColumn,\n  cancelMoveColumnDialog,\n} = tableSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = amount => dispatch => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectDeck = state => state.table.deck;\nexport const selectIllegalMoveShowing = state => state.table.illegalMoveShowing;\nexport const selectOverseerDirection = state => state.table.overseerDirection;\nexport const selectSeed = state => state.table.seed;\nexport const selectGameOverDialogShowing = state => state.table.gameOverDialogShowing;\nexport const selectMoveColumnDialogShowing = state => state.table.moveColumnDialogShowing;\n\nexport default tableSlice.reducer;\n","import React from 'react';\nimport styles from './Card.module.css';\n// import deck from './deck.svg';\n\nfunction Card(props) {\n  const { \n    suit, \n    value, \n    column, \n    row, \n    area, \n    selected, \n    onClick, \n    onDoubleClick,\n    onMouseEnter,\n  } = props;\n\n  return (\n    <div \n      style={{backgroundImage:`url(./deck/${value.toLowerCase()}${suit.toLowerCase()}.gif)`}} \n      className={`${styles.Card}`} \n      data-column={column}\n      data-row={row}\n      data-area={area}\n      data-value={value}\n      data-selected={selected}\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}\n      onMouseEnter={onMouseEnter}\n    ></div>\n  );\n}\nexport default Card;","import React from 'react';\nimport styles from './CardSpace.module.css';\n// import deck from './deck.svg';\n\nfunction CardSpace(props) {\n  const { suit, number, onClick } = props;\n  return <div \n    style={{backgroundImage:`url(./deck/${number}${suit}.gif)`}} \n    className={`${styles.CardSpace}`}\n    onClick={onClick}\n  ></div>;\n}\nexport default CardSpace;","import React, { Component } from 'react';\nimport styles from './Overseer.module.css';\n// import deck from './deck.svg';\n\nclass Overseer extends Component {\n  render() {\n    const { direction, gameOver } = this.props;\n\n    return <div className={`${styles.overseer}`}>\n      {!gameOver ? \n        <img src={`./deck/overseer-${direction}.gif`} alt=\"overseeing king\" />\n      : null }\n    </div>;\n  }\n}\nexport default Overseer;","import React, { useState } from 'react';\nimport styles from './Menu.module.css';\nimport \"xp.css/dist/XP.css\";\n\nexport function Menu(props) {\n  const { \n    deck, \n    newGame,\n    undo,\n    illegalMoveShowing,\n    onIllegalMoveClosed,\n    gameOverShowing,\n    onGameOverClosed,\n    moveColumnDialogShowing,\n    onMoveSingleCard,\n    onMoveColumn,\n    onCancelMoveColumn,\n    seed,\n  } = props;\n  const [ opened, setOpened ] = useState(false);\n  const [ menu, setMenu ] = useState('game');\n  const [ aboutDialogShowing, setAboutDialogShowing ] = useState(false);\n  const [ newGamePromptShowing, setNewGamePromptShowing ] = useState(false);\n  const [ restartGamePromptShowing, setRestartGamePromptShowing ] = useState(false);\n  const [ selectGameShowing, setSelectGameShowing ] = useState(false);\n  const [ selectGameCheckbox, setSelectGameCheckboxShowing ] = useState(true);\n  const [ seedInput, setSeedInput ] = useState(seed);\n  const cardsLeft = deck.filter(c => c.area !== 'stacks').length;\n\n  function menuClicked(menu) {\n    setMenu(menu);\n    setOpened(!opened);\n  }\n\n  function clickedItem(callback) {\n    setOpened(false);\n    callback();\n  }\n\n  return (\n    <div className={styles.Menu}>\n      <div \n        className={`${styles.MenuItem} ${styles.MenuItemLeft}`} \n        onClick={() => menuClicked('game')}\n        onMouseEnter={() => setMenu('game')}\n      >\n        Game\n      </div>\n      <div \n        className={`${styles.MenuItem} ${styles.MenuItemLeft}`} \n        onClick={() => menuClicked('help')}\n        onMouseEnter={() => setMenu('help')}\n      >\n        Help\n      </div>\n      <div className={`${styles.MenuItem} ${styles.MenuItemRight}`}>Cards left: { cardsLeft }</div>\n      { opened && menu === 'game' ? \n        <div className={styles.MenuList}>\n          <div onClick={() => clickedItem(() => setNewGamePromptShowing(true))}>New Game</div>\n          <div onClick={() => clickedItem(() => setSelectGameShowing(true))}>Select Game</div>\n          <div onClick={() => clickedItem(() => setRestartGamePromptShowing(true))}>Restart Game</div>\n          <div onClick={() => clickedItem(undo)} disabled={true}>Undo</div>\n        </div>\n      : null }\n      { opened && menu === 'help' ? \n        <div className={styles.MenuList} style={{ left: '35px' }}>\n          <div onClick={() => clickedItem(() => setAboutDialogShowing(true))}>\n            About...\n          </div>\n        </div>\n      : null }\n\n      { newGamePromptShowing || restartGamePromptShowing ? \n        <div className={styles.Dialog}>\n          <div style={{ width: '235px' }} className=\"window\">\n            <div className=\"title-bar\">\n              <div className=\"title-bar-text\">FreeCell</div>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Close\" />\n              </div>\n            </div>\n\n            <div className=\"window-body\">\n              <img src={`./info.png`} alt=\"info bubble\" style={{ verticalAlign:'middle' }}/>\n              <span style={{ textAlign: \"center\" }}>Do you want to resign this game?</span>\n              <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\n                <button onClick={() => {\n                  if (restartGamePromptShowing) {\n                    newGame(seed);\n                    setRestartGamePromptShowing(false);\n                  } else {\n                    newGame();\n                    setNewGamePromptShowing(false);\n                  }                  \n                }}>Yes</button>\n                <button onClick={() => setNewGamePromptShowing(false)}>No</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      : null }\n\n      { gameOverShowing ? \n        <div className={styles.Dialog}>\n          <div style={{ width: '210px' }} className=\"window\">\n            <div className=\"title-bar\" style={{height: '21px' }}>\n              <div className=\"title-bar-text\">Game Over</div>\n            </div>\n\n            <div className=\"window-body\">\n              <p style={{ textAlign: \"center\" }}>Congratulations, you win!</p>\n              <p style={{ textAlign: \"center\" }}>Do you want to play again?</p>\n              <div \n                className=\"field-row\" \n                style={{ \n                  paddingLeft: '19px',\n                  paddingTop: '15px',\n                  paddingBottom: '7px',\n                }}\n              >\n                <input \n                  defaultChecked \n                  type=\"checkbox\" \n                  id=\"selectGame\" \n                  checked={selectGameCheckbox} \n                  onChange={(e) => setSelectGameCheckboxShowing(e.target.checked)} />\n                <label htmlFor=\"selectGame\">Select game</label>\n              </div>\n              <div className=\"field-row\" style={{ justifyContent: 'center', marginBottom: '20px' }}>\n                <button onClick={() => {\n                  if (selectGameCheckbox) {\n                    setSelectGameShowing(true);\n                    onGameOverClosed();\n                  } else {\n                    newGame();\n                    onGameOverClosed();\n                  }                  \n                }}>Yes</button>\n                <button onClick={() => onGameOverClosed()}>No</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      : null }\n\n      { moveColumnDialogShowing ? \n        <div className={styles.Dialog}>\n          <div style={{ width: '230px' }} className=\"window\">\n            <div className=\"title-bar\" style={{height: '21px' }}>\n              <div className=\"title-bar-text\">Move to Empty Column...</div>\n            </div>\n\n            <div className=\"window-body\">\n              <div className=\"field-row\" style={{ justifyContent: 'center', marginTop: '25px' }}>\n                <button \n                  style={{ width: '130px' }}\n                  onClick={() => {\n                    onMoveColumn();        \n                  }}\n                >\n                  Move column\n                </button>\n              </div>\n              <div className=\"field-row\" style={{ justifyContent: 'center', marginTop: '12px' }}>\n                <button \n                  style={{ width: '130px' }}\n                  onClick={() => {\n                    onMoveSingleCard();        \n                  }}\n                >\n                  Move single card\n                </button>\n              </div>\n              <div className=\"field-row\" style={{ justifyContent: 'center', marginTop: '12px', marginBottom: '15px' }}>\n                <button onClick={() => {\n                  onCancelMoveColumn();\n                }}>Cancel</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      : null }\n\n      { selectGameShowing ? \n        <div className={styles.Dialog}>\n          <div style={{ width: '185px' }} className=\"window\">\n            <div className=\"title-bar\">\n              <div className=\"title-bar-text\">Game Number</div>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Close\" />\n              </div>\n            </div>\n\n            <div className=\"window-body\" style={{ textAlign: \"center\" }}>\n              <p>Select a game number<br />from 1 to 1000000</p>\n              <p>\n                <input \n                  type=\"text\" \n                  value={seedInput} \n                  onChange={(e) => {\n                    e.target.value = Math.min(1000000, parseInt(e.target.value)) || 0;\n                    setSeedInput(e.target.value);\n                  }} \n                  style={{ paddingLeft:'5px' }}\n                />\n              </p>\n              <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\n                <button onClick={() => {\n                  newGame(seedInput);\n                  setSelectGameShowing(false);\n                }}>OK</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      : null }\n\n      { illegalMoveShowing ? \n        <div className={styles.Dialog}>\n          <div style={{ width: '198px' }} className=\"window\">\n            <div className=\"title-bar\">\n              <div className=\"title-bar-text\">FreeCell</div>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Close\" />\n              </div>\n            </div>\n\n            <div className=\"window-body\">\n              <img src={`./info.png`} alt=\"info bubble\" style={{ verticalAlign:'middle' }}/>\n              <span style={{ textAlign: \"center\" }}>That move is not allowed.</span>\n              <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\n                <button onClick={() => onIllegalMoveClosed()}>OK</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      : null }\n      \n      { aboutDialogShowing ? \n        <div className={styles.Dialog}>\n          <div style={{ width: '400px' }} className=\"window\">\n            <div className=\"title-bar\">\n              <div className=\"title-bar-text\">FreeCell</div>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Close\" />\n              </div>\n            </div>\n\n            <div className=\"window-body\">\n              {<img src={`./info.png`} alt=\"info bubble\" style={{ verticalAlign:'middle' }}/>}\n              <span style={{ textAlign: \"center\" }}>FreeCell</span>\n              <p>By <a href=\"https://garrows.com\">Glen Arrowsmith</a></p>\n              <p>I made this for my father and father-in-law because there were no decent ad-free or paid versions of FreeCell that run on Windows 10. Hopefully this helps get your dad off of Windows XP too.</p>\n              <p>If you'd like to see more classic remakes, show your interest by <a href=\"https://patreon.com/garrows\">supporting my Patreon</a>. All proceeds go to charity.</p>\n              <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\n                <button onClick={() => setAboutDialogShowing(false)}>OK</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      : null }\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { illegalMove } from '../menu/menuSlice'\nimport {\n  deal,\n  cardClicked,\n  selectDeck,\n  selectIllegalMoveShowing,\n  selectOverseerDirection,\n  selectSeed,\n  holdSpaceClicked,\n  stackSpaceClicked,\n  holdSpaceHover,\n  stackSpaceHover,\n  cardHover,\n  columnClicked,\n  cardDoubleClicked,\n  closeIllegalMoveDialog,\n  closeGameOverDialog,\n  selectGameOverDialogShowing,\n  selectMoveColumnDialogShowing,\n  moveSingleCard,\n  moveColumn,\n  cancelMoveColumnDialog,\n} from './tableSlice';\nimport Card from '../../components/Card';\nimport CardSpace from './../../components/CardSpace';\nimport Overseer from './../../components/Overseer';\nimport styles from './Table.module.css';\nimport { Menu } from '../menu/Menu.js';\n\nconst mapStateToProps = (state, ownProps) => ({\n  onIllegalMove: ownProps.onIllegalMove,\n});\n\nconst mapDispatchToProps = { illegalMove }\n\nconst Table = ({ illegalMove }) => {\n  const deck = useSelector(selectDeck);\n  const illegalMoveShowing = useSelector(selectIllegalMoveShowing);\n  const overseerDirection = useSelector(selectOverseerDirection);\n  const seed = useSelector(selectSeed);\n  const gameOverDialogShowing = useSelector(selectGameOverDialogShowing);\n  const moveColumnDialogShowing = useSelector(selectMoveColumnDialogShowing);\n  const dispatch = useDispatch();\n  const gameOver = deck.filter(c => c.area !== 'stacks').length === 0;\n\n  function undo() {\n    alert('undo');\n  }\n\n  document.title = `FreeCell Game #${seed}`;\n\n  return (\n    <div>\n      <Menu \n        deck={deck}\n        seed={seed}\n        newGame={(seed) => dispatch(deal(seed))}\n        undo={() => undo()}\n        illegalMoveShowing={illegalMoveShowing}\n        onIllegalMoveClosed={() => dispatch(closeIllegalMoveDialog())}\n        gameOverShowing={gameOverDialogShowing}\n        onGameOverClosed={() => dispatch(closeGameOverDialog())}\n        moveColumnDialogShowing={moveColumnDialogShowing}\n        onMoveSingleCard={() => dispatch(moveSingleCard())}\n        onMoveColumn={() => dispatch(moveColumn())}\n        onCancelMoveColumn={() => dispatch(cancelMoveColumnDialog())}\n      />\n      <div className={styles.TopRow}>\n        <div className={styles.TopRowLeft} onMouseEnter={() => dispatch(holdSpaceHover())}>\n          <CardSpace onClick={() => dispatch(holdSpaceClicked(0))} />\n          <CardSpace onClick={() => dispatch(holdSpaceClicked(1))} />\n          <CardSpace onClick={() => dispatch(holdSpaceClicked(2))} />\n          <CardSpace onClick={() => dispatch(holdSpaceClicked(3))} />\n        </div>\n        <Overseer direction={overseerDirection} gameOver={gameOver}/>\n        <div className={styles.TopRowRight} onMouseEnter={() => dispatch(stackSpaceHover())} >\n          <CardSpace onClick={() => dispatch(stackSpaceClicked(0))} />\n          <CardSpace onClick={() => dispatch(stackSpaceClicked(1))} />\n          <CardSpace onClick={() => dispatch(stackSpaceClicked(2))} />\n          <CardSpace onClick={() => dispatch(stackSpaceClicked(3))} />\n        </div>\n      </div>\n      <div className={styles.Table}>\n        {Array.apply(null, Array(8)).map((item, index) => {\n          return <div \n            key={index}\n            className={styles.Column} \n            onClick={() => dispatch(columnClicked(index))}\n          ></div>\n        })}\n      </div>\n      {deck.map((card) => {\n        return <Card \n          key={card.key}\n          suit={card.suit} \n          value={card.value} \n          column={card.column}\n          row={card.row}\n          area={card.area}\n          selected={card.selected}\n          onClick={() => dispatch(cardClicked(card))}\n          onDoubleClick={() => dispatch(cardDoubleClicked(card))}\n          onMouseEnter={() => dispatch(cardHover(card))}\n        />\n      })}\n      {gameOver ? \n        <img src=\"./deck/overseer-smile.gif\" alt=\"Smiling King\" className={styles.SmilingOverseer}/>\n      : null }\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  mapDispatchToProps\n)(Table)","import React, { useState } from 'react';\nimport styles from './App.module.css';\n\nimport Table from '../features/table/Table.js';\n\nfunction App() {\n  const appDiv = React.useRef(null);\n  const [scale, setScale] = useState(0.5);\n\n  function handleResize() {\n    const newScale = Math.min( \n      window.innerWidth / appDiv.current.clientWidth, \n      window.innerHeight / appDiv.current.clientHeight\n    );\n    setScale(newScale);\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return _ => {\n      window.removeEventListener('resize', handleResize);\n    }\n  });\n\n\n  return (\n    <div ref={appDiv} className={styles.App} style={{ transform: `scale(${scale})` }} >\n      \n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport tableReducer from '../features/table/tableSlice';\nimport menuReducer from '../features/menu/menuSlice';\n\nexport default combineReducers({\n  table: tableReducer,\n  menu: menuReducer,\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit'\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers'\n\nwindow.debugStack = function(stack) {\n  stack.forEach(card => console.log(card.suit, card.value, card.color, card.int));\n}\n\nconst store = configureStore({\n  reducer: rootReducer\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constants\":\"\\\"../../Constants.module.css\\\"\",\"gameWidth\":\"632px\",\"gameHeight\":\"480px\",\"topRowHeight\":\"106px\",\"cardWidth\":\"71px\",\"cardPadding\":\"7px\",\"menuHeight\":\"20px\",\"TopRow\":\"Table_TopRow__2QAWd\",\"TopRowLeft\":\"Table_TopRowLeft__1QOCj\",\"TopRowRight\":\"Table_TopRowRight__1be-C\",\"Table\":\"Table_Table__2apwH\",\"Column\":\"Table_Column__1-T6H\",\"SmilingOverseer\":\"Table_SmilingOverseer__2yxjp\"};"],"sourceRoot":""}